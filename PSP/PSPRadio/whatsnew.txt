What's New for PSPRadio 0.35-pre4 - Released 10/11/05
======================================================
0.35
0.35-pre1
-Refactored PSPSound/PSPSound_MP3. (lots of things are different. but one thing that is evident to the end 
user is that the buffers were reduced by a factor of 5. Next -pre release will allow for the 
buffers to be configurable).
-Added basic multiple samplerate support!
Supported rates:
8000, 11025, 16000, 22050, 24000, 32000, 44100, 48000.
Any rate can be implemented, I just need to add it to the code, let me know if other rates are required.
Note that the samplerate conversion is really linear and simplistic, and hence the produced sound will not
be very good. Still, better than nothing.
-UI now displays buffer percentage (instead of in/out number)
0.35-pre2
-sound buffers configurable in .cfg file. Post your results!
-fixed bug where app would crash on exit if played a stream until end and then exited.
-Now the Text user interface is configurable, look at TextUI.cfg, play and post results!
-now multiple playlists are supported. The playlist configuration changed as well.. Now, you
need to put your playlist files under the PlayLists directory, and don't need to do anything
with the config file.
-The current playlist is selectable by using UP/DOWN
0.35-pre3
-cleaned up the display of playlist/stream, metadata. as 3 completely independent entities.
-Can browse playlists/entries while playing current stream. (It doesn't stop anymore when changing tracks)
-Refactoring of PSPSound/PSPSound_MP3 -> PSPSound/PSPSoundDecoder_MAD, internal OO changes.
-Thread priorities are now configurable in the .cfg file.
0.35-pre4
-Added message queue class for inter thread communications and synchronization.
-Revamped comm system for PSPApp (PSPRadio) using message q. This solves the problem with callback messaging 
(thread prio boosting/inheritance from caller, overhead on caller thread, etc. -- Also, now polling of buttons/vblank 
is done in a separate thread. -- still work in progress --).
-Message queue system renamed to event queue.. Everything is now using this, except for vblank.
-Changes to Logging to show time(in ms) and line numbers.
-Buffer Percentage is updated at 6fps max now (this to not overtax main thread+event handler)
-Now clear metadata on stream stop (including buffer %).
-more internal refactoring...
0.35-pre5
(sandberg)-Added button support to the 3D UI so it shows play/stop/pause.
(sandberg)-Added hprm (headphone remote control) support to PSPRadio. The keys are mapped to that forward/back
maps to Rtrigger/LTrigger. The Play/Pause button will start playing when stopped and stop when playing.
(jpfouch48)-Text items in GraphicsUI are now configurable thru the theme file.
(jpfouch48)-Cleaned up warning messages in GraphicsUI.


0.34
-Corrected the mutex and semaphore implementations..
(Now logging needs more resources because of this though, so it's probably a good idea to keep high).
-Also found a bug that would cause the crash on exit (one at least).
(PSPSound's destructor was accessing the m_ThDecode without checkin if it existed first.)
-Also added USB support. Needs to be enabled in the config file. ([USB]ENABLED=1;)
-USB support is dangerous. Not recommended.
-Disabled pause for URL streams.
-Lots of internal refactoring.
-Support for playlists v2 was added.
-Now data from playlist v2 is shown, then updated when metadata arrives.
-Can force a profile now, look in the .cfg file to see how.
-Dropped the 'b' as is redundant with the -pre.
-Now when pressing L and R, the song only auto starts if the user was currently playing a song.
-Added thread exit synchronization using the semaphore. (Should help make sure the app exits correctly).
-Removed forced network profile code. (As users having problems where able to solve them themselves).
-Tweaked the playlist v2 support so that it (hopefully, test) works with winamp .pls files. (Now I just
ignore the "NumberOfEntries"/"numberofentries" tag.

0.33b
-Corrected logging, so that it won't double-line feed.
-Added connection timeout so that if the server is not respoding, PSPRadio will timeout after 5 seconds.
-The connection now sends a message (can and will be used for the gui) for now, a '.' is printed every second while trying to connect.
-New option in config file: WIFI-AUTOSTART if set to 0, then the user can select the WIFI profile from inside the app.
-Now reports an error if the user tries to start the network and the switch is off
-Metadata is now parsed
-Network profile selection now is limited to actual configured network profiles, plus it displays the network profile name.
-Reverted resolver ntoa / aton logic, to help ppl with DNS problems.
-UI now completely encapsulated as a separate object, and an interface created that all UI need to follow. - This will allow for multiple
user interfaces to coexist, and to ease transition to GUI.
-Text UI now follows the interface; was also cleaned up a bit during conversion.
-Added exit synchronization, to help prevent crashes on exit. This is done with a semaphore. 
-Keeping the loglevel at 20 seems to help prevent the app from crashing on exit also.

0.32b
-Reports of sound skipping on 0.31b. Looking at the code, I realize I forgot to do something when processing metadata.
Hopefully this is corrected now.
-Solved the problem with threads not logging. I needed to use an absolute path to the log file.
-Change your LOG_LEVEL to 50, (or more), so that it doesn't fill up your ms.
-Metadata is only logged (to log file) when it changes.
-Metadata should update faster on the screen now.


0.31b
-Corrected problem when PLAYLIST not defined in config file.
-Disabled feature to go to next song in list for now.


0.3b
-Added support for comments. Use ';' as the first character. (Blank lines are also ignored)
-Now urls with no path work (http://64.202.98.193:8000 didn't work, but http://64.202.98.193:8000/ did. Now both do).
-Now asking the server to send metadata.
-Metadata information is displayed for the current stream.
-Added a logging library
-Integrated logging with everything (framework, app, config)
-Added an event system
-Integrated the event system. This will be useful when the gui is developed.
-When a stream finishes, it goes on to the next on the playlist
-Fixed problem where the last entry in the playlist was getting inserted twice into the list.
-Having trouble getting the threads to log anything..
