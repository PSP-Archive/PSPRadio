  command line options
>======================<

[This file lists all available command line options for netrik invocation. See
index.txt or index.html for an overview of available netrik documentation.]

Note: netrik is still in early developement state; options are subject
to changes.

--no-term-width
   When using the pager, this causes a page that contains extremely long words
   to be rendered wider than the screen, instead of breaking the word. Note
   however that side scrolling isn't implemented yet -- you won't be able to
   see the end of the line when using this option... In dump mode, this option
   causes usage of the default width of 80 columns instead of what the terminal
   definiton says. (Words are always broken in dump mode.)

--fussy-html
   Abort on any HTML syntax errors or warnings encountered. A short error
   description is printed. (This description may not be terribly useful at
   times...) This mode is primarily intended for HTML debugging. (Note however
   that netrik may oversee some errors; but most are reported.)

--clean-html
   Do not abort on HTML syntax errors. Error descriptions are printed for every
   syntax error (or warning), but netrik tries to parse the page anyhow.
   Workarounds are used for some typical syntax errors (e.g. unescaped '<' or
   '&' characters); other errors are ignored. After the whole page is loaded,
   if some error(s) were found, a warning message is printed (according to the
   severity of the worst encountered bug), and the pager starts after a
   keypress.

--valid-html
   This mode is identical to --clean-html, except that netrik doesn't pause
   after loading completes, if only warnings were generated but no real errors
   were encountered. (i.e. constructs that are discouraged in the standard, but
   strictly speaking are valid.)

--broken-html   (default)
   This mode is identical to --valid-html, except that netrik also doesn't
   pause if only simple errors with known workaround were encountered, which
   probably won't disturb layouting. Usage should be avoided if possible. (See
   syntax_error.* for details.)

--ignore-broken
   In this mode no warning is showm for any syntax errors, even if they might
   cause heavily broken layouting. Don't use!

--debug
   Before displaying (or dumping) the page, some intermediate layouting stages
   are shown. (This output is described in the README.) Try it -- it's quite
   intersting to watch netrik work :-) It can be also useful to find HTML errors
   in a page, as it dumps the page while loading/parsing it.

   (This option is not available if compiled with --disable-debug to ./configure)

--warn-unknown
   Issue a warning when encountering an unknown HTML element or attribute. This
   is probably only useful for debugging purposes, as there are quite a lot of
   (legal) HTML facilities netrik doesn't know.

--dump
   Just dump the file given as argument to the screen and quit, instead of
   starting the pager. (The page is layouted correctly.)
   
   You may want to give the --bw option also (see below), which will ensure the
   dump is plain text without any control sequences.
   
--no-proxy
   Ignore the "http_proxy" and "HTTP_PROXY" environment variables with
   --builtin-http. (No effect on wget!)

--no-builtin-http
   Use wget to retrieve pages from a HTTP server, instead of the builtin HTTP
   handling code. Note that HTTP redirects in most cases cause relative links
   in the page to be broken when using wget. The builtin HTTP code seems to
   work good now; using wget shouldn't be necessary. (FTP pages however are
   always loaded via wget.)

--no-anchor-offset
   When jumping to an anchor (following a link with a fragment identifiert),
   the page will be scrolled (if possible) so that the anchor will stand just
   below the screen top. (In the second line, which is the first line in which
   links can be activated.) By default, the anchor is at about 1/5 of the
   screen height below the top.

--cursor-keys
   Use the arrow keys to move the cursor, instead of the lynx-like navigation used
   by default. (This is useful for blind users, as it allows using the "flash
   cursor" keys found on braille displays.)

--xterm
   Assume the terminal has xterm-like attribute handling. (i.e. needs a workaround
   to display a bright background color.)
   
   This setting is used automatically if the terminal type (TERM environment
   variable) contains the string "xterm", so you only need to set it manually if
   you have some other terminal that also needs that workaround or if you have set
   --console in \fBnetrikrc\fP(5) and need to override that.
   
   Note that this workaround works *only* on xterm (and maybe some other
   terminals), but not on linux console, so you can't just set it categorically!

--console
   Assume the terminal doesn't need and understand the xterm workaround for
   bright background colors. (See above.)

--dark-background
   Use the color definitions from \fIcolors-dark.c\fP (formerly
   \fIcolors.alt.c\fP). A black background will be used (even if the terminal uses
   a bright background by default!), and a set of foreground colors which look
   very nice on black backgound. (But would be unusable on bright background.)
   
   This is the default now.

--bright-background
   Use color definitions from \fIcolors-bright.c\fP (formerly
   \fIcolors.default.c\fP). The terminal's default colors will be used for
   background and normal text, and an alternative color scheme suitable for bright
   background will be used for other text types.
   
   Use this if you have a terminal with bright background (like most xterms), and
   also want to stick to that in \fBnetrik\fP.
   
   Note that this can be used on a terminal with dark background as well; some
   colors are somewhat hard to read, however.

--no-force-colors
   Use terminal's default colors even with --dark-background, instead of forcing
   usage of \fBnetrik\fP's default text colors (white on black for normal text).
   This is useful if you use the default (dark) colors and your terminal has a
   black background anyways -- forcing the default colors is only a waste of time in
   this situation.

--bw
   Start up in b/w mode. Useful to avoid the warning about missing color
   capabilities if you really have a terminal not capable of switching text
   colors. Also useful together with --dump option.

--color
   Undo --bw option.


